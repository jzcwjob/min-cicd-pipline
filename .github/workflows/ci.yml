name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-sast-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17 with Maven cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Unit tests
        run: bash scripts/test.sh

      - name: Install Semgrep
        run: pipx install semgrep
      - name: SAST (Semgrep)
        run: bash scripts/scan_sast.sh

      - name: Install Gitleaks
        run: |
          curl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | bash -s -- -d
          sudo mv gitleaks /usr/local/bin/
      - name: Secrets scan (Gitleaks)
        run: bash scripts/scan_secrets.sh

  build-and-image-scan:
    runs-on: ubuntu-latest
    needs: [test-sast-secrets]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (pull latest bases)
        run: bash scripts/build.sh

      - name: Trivy image scan (HIGH/CRITICAL, ignore-unfixed)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: pay-svc:${{ github.sha }}
          format: table
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  iac-scan:
    runs-on: ubuntu-latest
    needs: [build-and-image-scan]
    steps:
      - uses: actions/checkout@v4
      - name: Trivy IaC scan on k8s/
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: "config"
          scan-ref: "./k8s"
          format: table
          exit-code: "1"
          severity: "CRITICAL,HIGH"

  # 可选：DAST，起容器后用 ZAP 基线扫描本地 http://localhost:8080
  dast:
    runs-on: ubuntu-latest
    needs: [build-and-image-scan]
    steps:
      - uses: actions/checkout@v4

      - name: Run app container
        run: |
          docker run -d --rm -p 8080:8080 --name pay-svc pay-svc:${{ github.sha }}
          # 等待服务起来
          for i in {1..30}; do curl -fsS http://localhost:8080/health && break || sleep 2; done

      - name: ZAP Baseline
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: "http://localhost:8080"
          fail_action: false # 基线模式仅报告，不阻断；需要阻断可设 true
          cmd_options: "-a" # 轻量爬站+被动扫描

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap*.html
            zap*.md
